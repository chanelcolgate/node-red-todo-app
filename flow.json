[
    {
        "id": "81389382.5c507",
        "type": "tab",
        "label": "Todo APIs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a7c98f63.a00f9",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f59388.403c4c8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9995b4c2.8d8f68",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dd13241.f528fe",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dbc1b5ab.abe0a8",
        "type": "tab",
        "label": "api dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "19d38fbf.a18f6",
        "type": "subflow",
        "name": "Get ToDo",
        "info": "Gets an individual todo item from the database.\n\n### Inputs\n\nExpects `msg.payload` to be the `_id` of the todo item.\n\n### Outputs\n\n`msg.payload` contains the todo item with the additional fields set.",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "f801b73e.2fa6e8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 60,
                "wires": [
                    {
                        "id": "5c3552e3.1c524c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "7d26dacc.6bfb94",
        "type": "subflow",
        "name": "Clean ToDo",
        "info": "Cleans a todo item from the database ready to return in the API.\n\nThis involves:\n\n - removing the `_id` and `_rev` properties\n - adding the `url` property\n\n### Inputs\n\nExpects `msg.payload` to be a todo item from the database.\n\n### Outputs\n\n`msg.payload` contains the clean todo item.",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "55ee4eca.425db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "55ee4eca.425db",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-check-square-o"
    },
    {
        "id": "3e527677.c86c1a",
        "type": "cloudantplus",
        "host": "http://this-couchdb:5984",
        "name": ""
    },
    {
        "id": "3098618a.0c745e",
        "type": "slack-config",
        "name": "packt-bot"
    },
    {
        "id": "9e747482.d4c2a8",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "a07a53ce.62217"
            ]
        ]
    },
    {
        "id": "dcf53a36.75f188",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "bfdb44a1.1824d8",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Get all todos",
        "info": "Get all todo items from the database.\n\nThe Cloudant node offers a 'Get All' option, but it does not expose the option to include the documents in the result. So this flow has to do some extra work to get the full result.\n\nThe 'Check empty?' Switch node checks to see if any results have been returned. If not (2nd output) it passes straight to the HTTP Response node with an empty array.\n\nOtherwise it passes the results to a Split node that generates one message per result. Each of those messages contains the `_id` of a todo item. This is passed to the `Get ToDo` Subflow which retrieves the individual item.\n\nThese are then passed to the Join node which recombines the stream of messages generated by the Split node back into a single message. This can finally be passed to the HTTP Response node.",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "e183cfc6.1f008",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "e360bc45.81bfe"
            ]
        ]
    },
    {
        "id": "3612f215.13809e",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Add a new todo",
        "info": "Adds a new todo item to the database.\n\nThis flow starts by setting some default values on the todo item if they have not been provided.\n\nIt then stores it in the database.\n\nThe 'Success?' Switch node checks the response from the database and if it was successful it passes the id of the newly added todo item back to the HTTP Response node.\n\nThe second output of the Switch node will be triggered if there is an error storing the item. It is not currently connected to anything so the error is ignored.\n\n",
        "x": 120,
        "y": 160,
        "wires": []
    },
    {
        "id": "41c6c422.032d2c",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "cdaeacc.f09e35"
            ]
        ]
    },
    {
        "id": "3f6a1d86.f9b892",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 460,
        "wires": []
    },
    {
        "id": "f8e522f4.85acd",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Get a todo item",
        "info": "Gets an individual todo item.\n\nThis uses the `Get ToDo` subflow to get an item from the database and format it properly for returning.\n\nNote the grey Link node - this allows other flows to trigger this flow.",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "3abddbea.a9c8c4",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "788d63c4.d9be3c"
            ]
        ]
    },
    {
        "id": "93ea23e4.066d",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Update a todo",
        "info": "Updates an existing item.\n\nTo update an item the flow needs to know the items latest `_rev` value. Before it can get that it must first move the incoming update data from `msg.payload` to `msg.patch`. This means the update data is not lost when the item is retrieved from the database.\n\nThe 'Exists?' switch node checks the item is known. If it is (1st output) it applies the update to the document by merging the update data. This uses a JSONata expression. It then writes the document back to the database.\n\nFinally it uses a Link node to pass the message into the 'Get a todo item' flow so the full updated document can be returned.\n\nThe second output of the 'Exists?' switch node causes a 404 response to be returned to the request.",
        "x": 110,
        "y": 560,
        "wires": []
    },
    {
        "id": "6da70566.56d69c",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "4e1c3359.2d5b2c"
            ]
        ]
    },
    {
        "id": "11249f0d.585451",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 880,
        "wires": []
    },
    {
        "id": "395159dc.6538f6",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Delete all todos",
        "info": "Deletes all items in the database.\n\nWhilst CouchDB provides an api for doing this directly, it is not exposed by this Cloudant node.\n\nInstead the flow gets the list of all documents and then iterates over it to delete each in turn. This uses the same Split/Join pattern as the 'Get all todos' flow.",
        "x": 120,
        "y": 780,
        "wires": []
    },
    {
        "id": "4b6dabfd.297b74",
        "type": "http in",
        "z": "81389382.5c507",
        "name": "",
        "url": "/todos/:todoId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "455b614c.650b3"
            ]
        ]
    },
    {
        "id": "2f47c7c7.96cb18",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 320,
        "wires": []
    },
    {
        "id": "40d17dd2.7f0944",
        "type": "comment",
        "z": "81389382.5c507",
        "name": "Delete a todo",
        "info": "Deletes an item from the database.\n\nAs CouchDB requires us to provide the `_id` *and* `_rev` of the item, this flow most first get the item from the database so we can then delete it.\n\nThe CouchDB API does provide a more efficient way to get the `_rev` without retrieving the entire document, but this Cloudant node doesn't provide that option.",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "a07a53ce.62217",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get all",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "f5f4fcb8.f353",
                "6cff7291.b1777c"
            ]
        ]
    },
    {
        "id": "cdaeacc.f09e35",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "776e36f.71b26c8"
            ]
        ]
    },
    {
        "id": "1c2ab83d.949958",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Add new todo",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "a8bde436.0dc558"
            ]
        ]
    },
    {
        "id": "a8bde436.0dc558",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Success?",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "33d30c.3430ecf4"
            ],
            []
        ]
    },
    {
        "id": "33d30c.3430ecf4",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 180,
        "wires": [
            [
                "9166e792.47b9d8"
            ]
        ]
    },
    {
        "id": "46d195d2.1a60bc",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Delete doc",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "delete",
        "x": 710,
        "y": 320,
        "wires": [
            [
                "2f47c7c7.96cb18"
            ]
        ]
    },
    {
        "id": "455b614c.650b3",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "6e585cfa.09f564"
            ]
        ]
    },
    {
        "id": "6417e4dd.f51b8c",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Delete one",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "delete",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "aac31d6e.161fc"
            ]
        ]
    },
    {
        "id": "4e1c3359.2d5b2c",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get all",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "7ebf0499.3d5dac"
            ]
        ]
    },
    {
        "id": "e7d95978.fe0988",
        "type": "split",
        "z": "81389382.5c507",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 820,
        "wires": [
            [
                "6417e4dd.f51b8c"
            ]
        ]
    },
    {
        "id": "aac31d6e.161fc",
        "type": "join",
        "z": "81389382.5c507",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 730,
        "y": 820,
        "wires": [
            [
                "4478dc0.634da24"
            ]
        ]
    },
    {
        "id": "4478dc0.634da24",
        "type": "change",
        "z": "81389382.5c507",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 880,
        "wires": [
            [
                "11249f0d.585451"
            ]
        ]
    },
    {
        "id": "7ebf0499.3d5dac",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 880,
        "wires": [
            [
                "e7d95978.fe0988"
            ],
            [
                "4478dc0.634da24"
            ]
        ]
    },
    {
        "id": "e360bc45.81bfe",
        "type": "function",
        "z": "81389382.5c507",
        "name": "Set Defaults",
        "func": "if (!msg.payload.hasOwnProperty(\"completed\")) {\n    msg.payload.completed = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 200,
        "wires": [
            [
                "1c2ab83d.949958"
            ]
        ]
    },
    {
        "id": "f7630914.871188",
        "type": "split",
        "z": "81389382.5c507",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "f8a9727.3053b9"
            ]
        ]
    },
    {
        "id": "86addf88.bd4bc",
        "type": "join",
        "z": "81389382.5c507",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 910,
        "y": 60,
        "wires": [
            [
                "dcf53a36.75f188"
            ]
        ]
    },
    {
        "id": "f5f4fcb8.f353",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Check empty?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 100,
        "wires": [
            [
                "f7630914.871188"
            ],
            [
                "dcf53a36.75f188"
            ]
        ]
    },
    {
        "id": "a9efd584.e6fb78",
        "type": "link in",
        "z": "81389382.5c507",
        "name": "Get ToDo",
        "links": [
            "9166e792.47b9d8",
            "bb28e46.d3c8918"
        ],
        "x": 495,
        "y": 500,
        "wires": [
            [
                "776e36f.71b26c8"
            ]
        ]
    },
    {
        "id": "9166e792.47b9d8",
        "type": "link out",
        "z": "81389382.5c507",
        "name": "",
        "links": [
            "a9efd584.e6fb78"
        ],
        "x": 995,
        "y": 180,
        "wires": []
    },
    {
        "id": "6e585cfa.09f564",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get _rev",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "46d195d2.1a60bc"
            ]
        ]
    },
    {
        "id": "7eee2972.ef8f08",
        "type": "cloudantplus out",
        "z": "81389382.5c507",
        "name": "Apply patch",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "bb28e46.d3c8918"
            ]
        ]
    },
    {
        "id": "bb28e46.d3c8918",
        "type": "link out",
        "z": "81389382.5c507",
        "name": "",
        "links": [
            "a9efd584.e6fb78",
            "d47278f7.4d9738"
        ],
        "x": 875,
        "y": 680,
        "wires": []
    },
    {
        "id": "239e2e9f.36cf82",
        "type": "cloudantplus in",
        "z": "81389382.5c507",
        "name": "Get _rev",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "964624.14fe29e"
            ]
        ]
    },
    {
        "id": "964624.14fe29e",
        "type": "switch",
        "z": "81389382.5c507",
        "name": "Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 700,
        "wires": [
            [
                "dfc6ed86.814bc"
            ],
            [
                "1fea61eb.78253e"
            ]
        ]
    },
    {
        "id": "788d63c4.d9be3c",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Move patch",
        "rules": [
            {
                "t": "set",
                "p": "patch",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 620,
        "wires": [
            [
                "239e2e9f.36cf82"
            ]
        ]
    },
    {
        "id": "dfc6ed86.814bc",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Update patch",
        "rules": [
            {
                "t": "set",
                "p": "patch._id",
                "pt": "msg",
                "to": "req.params.todoId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$merge([$.payload,$.patch])",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 680,
        "wires": [
            [
                "7eee2972.ef8f08"
            ]
        ]
    },
    {
        "id": "f801b73e.2fa6e8",
        "type": "cloudantplus in",
        "z": "19d38fbf.a18f6",
        "name": "",
        "cloudant": "3e527677.c86c1a",
        "database": "todos",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "5c3552e3.1c524c"
            ]
        ]
    },
    {
        "id": "55ee4eca.425db",
        "type": "function",
        "z": "7d26dacc.6bfb94",
        "name": "",
        "func": "msg.payload.url = msg.req.protocol + '://' + msg.req.get('host') + '/todos/' + msg.payload._id\ndelete msg.payload._rev;\ndelete msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "776e36f.71b26c8",
        "type": "subflow:19d38fbf.a18f6",
        "z": "81389382.5c507",
        "name": "",
        "env": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "3f6a1d86.f9b892"
            ]
        ]
    },
    {
        "id": "5c3552e3.1c524c",
        "type": "subflow:7d26dacc.6bfb94",
        "z": "19d38fbf.a18f6",
        "name": "",
        "env": [],
        "x": 370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f8a9727.3053b9",
        "type": "subflow:19d38fbf.a18f6",
        "z": "81389382.5c507",
        "name": "",
        "env": [],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "86addf88.bd4bc"
            ]
        ]
    },
    {
        "id": "1fea61eb.78253e",
        "type": "change",
        "z": "81389382.5c507",
        "name": "Set 404 response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "404",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 740,
        "wires": [
            [
                "a8cd9886.9e8718"
            ]
        ]
    },
    {
        "id": "a8cd9886.9e8718",
        "type": "http response",
        "z": "81389382.5c507",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 740,
        "wires": []
    },
    {
        "id": "ffadfd6b.bb174",
        "type": "watson-tone-analyzer-v3",
        "z": "3f59388.403c4c8",
        "name": "",
        "tones": "all",
        "sentences": "true",
        "contentType": "false",
        "tone-method": "generalTone",
        "interface-version": "2016-05-19",
        "inputlang": "en",
        "service-endpoint": "https://api.us-south.tone-analyzer.watson.cloud.ibm.com/instances/0de12cba-b398-4cd0-ba5a-93b3a289b393",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "27612f1b.4cc84"
            ]
        ]
    },
    {
        "id": "fac844a0.5d6138",
        "type": "sentiment",
        "z": "3f59388.403c4c8",
        "name": "",
        "property": "payload",
        "x": 390,
        "y": 460,
        "wires": [
            [
                "ffadfd6b.bb174"
            ]
        ]
    },
    {
        "id": "478af227.434ccc",
        "type": "inject",
        "z": "3f59388.403c4c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "My name is nervermore",
        "payloadType": "str",
        "x": 290,
        "y": 400,
        "wires": [
            [
                "fac844a0.5d6138"
            ]
        ]
    },
    {
        "id": "de45c4c6.301418",
        "type": "debug",
        "z": "3f59388.403c4c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "27612f1b.4cc84",
        "type": "function",
        "z": "3f59388.403c4c8",
        "name": "",
        "func": "msg.payload = {\n    \"text\": msg.payload,\n    \"tone\": msg.response,\n    \"sentiment\": msg.sentiment\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 500,
        "wires": [
            [
                "de45c4c6.301418"
            ]
        ]
    },
    {
        "id": "ae13285a.a78888",
        "type": "inject",
        "z": "3f59388.403c4c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"lastUpdateTs\":1617956096039,\"key\":\"alarmSetting\",\"value\":{\"activePower\":{\"warning\":{\"enable\":true,\"ranges\":[{\"lower\":{\"is\":\">=\",\"value\":-10},\"upper\":{\"is\":\"<\",\"value\":-5}},{\"lower\":{\"is\":\">\",\"value\":5},\"upper\":{\"is\":\"<=\",\"value\":10}}]},\"critical\":{\"enable\":true,\"ranges\":[{\"lower\":{\"is\":\"null\",\"value\":0},\"upper\":{\"is\":\"<\",\"value\":-10}},{\"lower\":{\"is\":\">\",\"value\":10},\"upper\":{\"is\":\"null\",\"value\":0}}]}},\"current\":{\"warning\":{\"enable\":true,\"ranges\":[{\"lower\":{\"is\":\">=\",\"value\":-10},\"upper\":{\"is\":\"<\",\"value\":-5}},{\"lower\":{\"is\":\">\",\"value\":5},\"upper\":{\"is\":\"<=\",\"value\":10}}]},\"critical\":{\"enable\":true,\"ranges\":[{\"lower\":{\"is\":\"null\",\"value\":0},\"upper\":{\"is\":\"<\",\"value\":-10}},{\"lower\":{\"is\":\">\",\"value\":10},\"upper\":{\"is\":\"null\",\"value\":0}}]}}}}]",
        "payloadType": "json",
        "x": 540,
        "y": 240,
        "wires": [
            [
                "d03b3e26.feec"
            ]
        ]
    },
    {
        "id": "d03b3e26.feec",
        "type": "debug",
        "z": "3f59388.403c4c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "6cff7291.b1777c",
        "type": "debug",
        "z": "81389382.5c507",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "54a9cf35.26a1",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Add a new item",
        "info": "",
        "x": 320,
        "y": 160,
        "wires": []
    },
    {
        "id": "b1cf30c5.a753a",
        "type": "inject",
        "z": "a7c98f63.a00f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Fullstack Jacket\",\"description\":\"Keep warm and protected with the rugged, durable Fullstack lightweight jacket.\",\"product_type\":\"hoodies/jackets\",\"image_tag\":\"jacket.png\",\"created_at\":2018,\"price\":49.99}",
        "payloadType": "json",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "78470220.69a58c"
            ]
        ]
    },
    {
        "id": "78470220.69a58c",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Add a new product",
        "cloudant": "3e527677.c86c1a",
        "database": "products",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "a5ff08c1.226538"
            ]
        ]
    },
    {
        "id": "3c6ae0e7.22c76",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Get all products",
        "info": "",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "6a811060.5b99d",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "[get] /api/products?token=<token>",
        "url": "/api/products",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "437298ec.cf6b88"
            ]
        ]
    },
    {
        "id": "1ac1de09.edcc52",
        "type": "cloudantplus in",
        "z": "a7c98f63.a00f9",
        "name": "Get all prodcuts",
        "cloudant": "3e527677.c86c1a",
        "database": "products",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 820,
        "y": 420,
        "wires": [
            [
                "601c5e79.02f4c"
            ]
        ]
    },
    {
        "id": "601c5e79.02f4c",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "a5ff08c1.226538",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Success?",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "b893b631.8fa448"
            ],
            []
        ]
    },
    {
        "id": "b893b631.8fa448",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload._id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 200,
        "wires": [
            [
                "7ffa8b93.098334"
            ]
        ]
    },
    {
        "id": "e0ab8bbd.80d558",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "",
        "func": "const newCartProduct = {\n    _id: msg.post._id,\n    title: msg.post.title,\n    description: msg.post.description,\n    price: msg.post.price,\n    image_tag: msg.post.image_tag,\n    quantity: 1\n};\n\nmsg.payload = newCartProduct;\n\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 980,
        "wires": [
            [
                "edde4fd2.383c1"
            ]
        ]
    },
    {
        "id": "edde4fd2.383c1",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Insert cart",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 840,
        "y": 980,
        "wires": [
            [
                "922bfd86.ce10c"
            ]
        ]
    },
    {
        "id": "ffb180bf.49ba2",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Add a new cart",
        "info": "",
        "x": 320,
        "y": 780,
        "wires": []
    },
    {
        "id": "cea5aca2.55e05",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "url": "/api/cart",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 840,
        "wires": [
            [
                "e7ee2bf2.445338"
            ]
        ]
    },
    {
        "id": "e7ee2bf2.445338",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Move post",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload._id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "4693f424.657dbc"
            ]
        ]
    },
    {
        "id": "4693f424.657dbc",
        "type": "cloudantplus in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 650,
        "y": 840,
        "wires": [
            [
                "aeeae15e.e706c"
            ]
        ]
    },
    {
        "id": "aeeae15e.e706c",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 940,
        "wires": [
            [
                "beb2e40c.f6b118"
            ],
            [
                "e0ab8bbd.80d558"
            ]
        ]
    },
    {
        "id": "beb2e40c.f6b118",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "",
        "func": "msg.payload.quantity++;\n\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 920,
        "wires": [
            [
                "c1e50d6b.6c7ca"
            ]
        ]
    },
    {
        "id": "c1e50d6b.6c7ca",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Insert cart",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 840,
        "y": 920,
        "wires": [
            [
                "b8ca8c44.246dc"
            ]
        ]
    },
    {
        "id": "27d64660.55f8ca",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Delete a cart",
        "info": "",
        "x": 310,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a85a27bc.a4e8a8",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "url": "/api/delete",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 1100,
        "wires": [
            [
                "182ba886.8bc507"
            ]
        ]
    },
    {
        "id": "182ba886.8bc507",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Move post",
        "rules": [
            {
                "t": "set",
                "p": "delete",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload._id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1100,
        "wires": [
            [
                "c1067ae3.2e5548"
            ]
        ]
    },
    {
        "id": "c1067ae3.2e5548",
        "type": "cloudantplus in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 650,
        "y": 1100,
        "wires": [
            [
                "f2b71457.429e08"
            ]
        ]
    },
    {
        "id": "f2b71457.429e08",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Exists?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "d0999de.fab416"
            ],
            [
                "eace22be.57e8a"
            ]
        ]
    },
    {
        "id": "5e2b86db.d7b788",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "",
        "func": "msg.payload.quantity--;\n\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 1140,
        "wires": [
            [
                "98d35a69.066a18"
            ]
        ]
    },
    {
        "id": "98d35a69.066a18",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Delete cart",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 1090,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "eace22be.57e8a",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Set 404 response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "404",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1280,
        "wires": [
            [
                "c473f0ad.90fbb"
            ]
        ]
    },
    {
        "id": "c473f0ad.90fbb",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d0999de.fab416",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "",
        "property": "payload.quantity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "5e2b86db.d7b788"
            ],
            [
                "fc394b43.0aaea8"
            ]
        ]
    },
    {
        "id": "fc394b43.0aaea8",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Delete cart",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 910,
        "y": 1200,
        "wires": [
            [
                "d83c89f4.816be8"
            ]
        ]
    },
    {
        "id": "cda87d91.ea7d2",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Delete all carts",
        "info": "",
        "x": 300,
        "y": 1360,
        "wires": []
    },
    {
        "id": "43bfe912.225838",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "url": "/api/delete/all",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 1420,
        "wires": [
            [
                "9c66d8db.206138"
            ]
        ]
    },
    {
        "id": "9c66d8db.206138",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Move post",
        "rules": [
            {
                "t": "set",
                "p": "delete",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload._id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1420,
        "wires": [
            [
                "51acad1d.9a3984"
            ]
        ]
    },
    {
        "id": "51acad1d.9a3984",
        "type": "cloudantplus in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 650,
        "y": 1420,
        "wires": [
            [
                "4fb0268e.d74188"
            ]
        ]
    },
    {
        "id": "4fb0268e.d74188",
        "type": "cloudantplus out",
        "z": "a7c98f63.a00f9",
        "name": "Delete all cart",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 820,
        "y": 1420,
        "wires": [
            [
                "52db5926.ca8d28"
            ]
        ]
    },
    {
        "id": "52db5926.ca8d28",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d83c89f4.816be8",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3a94c570.1d61ea",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "login",
        "info": "",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "2fef0a0b.5468d6",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "",
        "url": "/api/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "fd76449f.bb7858"
            ]
        ]
    },
    {
        "id": "fd76449f.bb7858",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "Fake API token",
        "func": "// A fake API token our server validates\nconst API_TOKEN = 'D6W69PRgCoDKgHZGJmRUNA';\n\nconst postRequest = {\n    \"success\": true,\n    \"token\": \"D6W69PRgCoDKgHZGJmRUNA\"\n};\n\nmsg.payload = postRequest;\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 100,
        "wires": [
            [
                "fbc7b9ce.545658"
            ]
        ]
    },
    {
        "id": "fbc7b9ce.545658",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "da6ac5f9.1c7e28",
        "type": "comment",
        "z": "a7c98f63.a00f9",
        "name": "Get all carts",
        "info": "",
        "x": 310,
        "y": 560,
        "wires": []
    },
    {
        "id": "f63fe547.ab4338",
        "type": "http in",
        "z": "a7c98f63.a00f9",
        "name": "[get] /api/cart?token=<token>",
        "url": "/api/cart",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "771fd0dd.5cc9c"
            ]
        ]
    },
    {
        "id": "d0ca95f9.6e7c08",
        "type": "cloudantplus in",
        "z": "a7c98f63.a00f9",
        "name": "Get all carts",
        "cloudant": "3e527677.c86c1a",
        "database": "carts",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 790,
        "y": 680,
        "wires": [
            [
                "e15cef8f.71bc"
            ]
        ]
    },
    {
        "id": "e15cef8f.71bc",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 680,
        "wires": []
    },
    {
        "id": "3a8f1439.209bfc",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "888db968.093858"
            ]
        ]
    },
    {
        "id": "888db968.093858",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/search/?query=Ho Chi Minh",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 400,
        "wires": [
            [
                "e759e5d1.1a92a8"
            ]
        ]
    },
    {
        "id": "e759e5d1.1a92a8",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Get woeid of city",
        "func": "// Get woeid of city\nvar a = JSON.parse(msg.payload);\nmsg.payload = a[0].woeid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 460,
        "wires": [
            [
                "5e19d00a.47317"
            ]
        ]
    },
    {
        "id": "5e19d00a.47317",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/{{ payload }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "62ac9f2b.cc064"
            ]
        ]
    },
    {
        "id": "22640ab2.cff386",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "Create Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"q\":\"CREATE DATABASE abc\"}",
        "payloadType": "json",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "d25b5acd.31e488"
            ]
        ]
    },
    {
        "id": "d25b5acd.31e488",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Create Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/query?q={{ payload.q }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "c5b508e6.2bd048"
            ]
        ]
    },
    {
        "id": "c5b508e6.2bd048",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 60,
        "wires": []
    },
    {
        "id": "3eb7b084.82e2e",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "Drop Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"q\":\"DROP DATABASE abc\"}",
        "payloadType": "json",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "40004167.55c87"
            ]
        ]
    },
    {
        "id": "40004167.55c87",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Drop Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/query?q={{ payload.q }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "63f5c43b.201f5c"
            ]
        ]
    },
    {
        "id": "63f5c43b.201f5c",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "62ac9f2b.cc064",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Dump Data",
        "func": "// Convert to JSON\nfunction escape_string(string) {\n    return string.replace(/\\s/ig,'\\\\ ').replace(/\\,/g,'\\\\,').replace(/\\=/g,'\\\\ =');\n}\n\n// function escape_string(string) {\n//     return string;\n// }\n\n// msg.payload = escape_string(msg.payload.location_type);\n\nvar data = [];\n\nvar sun_rise = new Date(Date.parse(msg.payload.sun_rise)).getTime();\nvar sun_set = new Date(Date.parse(msg.payload.sun_set)).getTime();\n\nvar tags = [\n    `location_type=${escape_string(msg.payload.location_type)}`,\n    `title=${escape_string(msg.payload.title)}`,\n    `latt=${msg.payload.latt_long.split(',')[0]}`,\n    `long=${msg.payload.latt_long.split(',')[1]}`,\n    `country=${escape_string(msg.payload.parent.title)}`,\n    `timezone=${escape_string(msg.payload.timezone)}`\n];\n\n\n// msg.timestamp = timestamp.getTime();\n\n\nmsg.payload.consolidated_weather.forEach(element => {\n  var timestamp = new Date(Date.parse(element.created)).getTime();\n  for (var elem in element) {\n        if (elem === 'weather_state_name') {\n            var measure = elem;\n            // var value = escape_string(element[elem]);\n            var value = '\\\"' + element[elem].toString() + '\\\"';\n            data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n            continue;\n        }\n        if (elem === 'wind_direction_compass') {\n            measure = elem;\n            // var value = escape_string(element[elem]);\n            value = '\\\"' + element[elem].toString() + '\\\"';\n            data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n            continue;\n        }\n        if ( elem === 'id' || elem === 'weather_state_abbr') {\n          continue;\n        }\n        if (elem === 'created') {\n          continue;\n        }\n        if (elem === 'applicable_date') {\n            continue;\n        }\n        measure = elem;\n        value = element[elem];\n        data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n  }\n});\n\nmsg.payload = data.join('\\n');\n// msg.payload = data;\nmsg.db = 'abc';\nmsg.precision = 'ms';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 520,
        "wires": [
            [
                "892a75f4.d6d118"
            ]
        ]
    },
    {
        "id": "39dc1e61.226f62",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "892a75f4.d6d118",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db={{db}}&precision={{precision}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1150,
        "y": 520,
        "wires": [
            [
                "b88431ea.7b28c"
            ]
        ]
    },
    {
        "id": "b88431ea.7b28c",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 520,
        "wires": []
    },
    {
        "id": "24ccbff.c78f34",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pu_load_short,host=server02,region=us-west value=0.55 1422568543702900257",
        "payloadType": "str",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "94c282c2.d8542"
            ]
        ]
    },
    {
        "id": "94c282c2.d8542",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Add Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db=abc&precision=ns",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "39dc1e61.226f62"
            ]
        ]
    },
    {
        "id": "308ec68a.21c22a",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 640,
        "wires": []
    },
    {
        "id": "27df3d09.1cf012",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Sunset-Sunrise",
        "func": "function escape_string(string) {\n    return string.replace(/\\s/ig,'\\\\ ').replace(/\\,/g,'\\\\,').replace(/\\=/g,'\\\\ =');\n}\n\nvar sun_rise = new Date(Date.parse(msg.payload.sun_rise)).getTime();\nvar sun_set = new Date(Date.parse(msg.payload.sun_set)).getTime();\nvar timestamp = new Date(Date.parse(msg.payload.time)).getTime();\nvar data = [];\n\nvar tags = [\n    `location_type=${escape_string(msg.payload.location_type)}`,\n    `title=${escape_string(msg.payload.title)}`,\n    `latt=${msg.payload.latt_long.split(',')[0]}`,\n    `long=${msg.payload.latt_long.split(',')[1]}`,\n    `country=${escape_string(msg.payload.parent.title)}`,\n    `timezone=${escape_string(msg.payload.timezone)}`\n];\n\nvar measure = 'sun_rise';\nvalue = sun_rise;\ndata.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\nmeasure = 'sun_set';\nvalue = sun_set;\ndata.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n\nmsg.payload = data.join('\\n');\nmsg.db = 'abc';\nmsg.precision = 'ms';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 700,
        "wires": [
            [
                "905a12ec.25572"
            ]
        ]
    },
    {
        "id": "905a12ec.25572",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db={{db}}&precision={{precision}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "308ec68a.21c22a"
            ]
        ]
    },
    {
        "id": "9553bdae.5faf9",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "d716955.7fb1568"
            ]
        ]
    },
    {
        "id": "d716955.7fb1568",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/search/?query=Ho Chi Minh",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 660,
        "wires": [
            [
                "703edfd0.c84f9"
            ]
        ]
    },
    {
        "id": "703edfd0.c84f9",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Get woeid of city",
        "func": "// Get woeid of city\nvar a = JSON.parse(msg.payload);\nmsg.payload = a[0].woeid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 720,
        "wires": [
            [
                "5cb54a44.98cfa4"
            ]
        ]
    },
    {
        "id": "5cb54a44.98cfa4",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/{{ payload }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 780,
        "wires": [
            [
                "27df3d09.1cf012"
            ]
        ]
    },
    {
        "id": "437298ec.cf6b88",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "",
        "func": "const token = msg.payload.token;\nconst API_TOKEN = 'D6W69PRgCoDKgHZGJmRUNA';\n\nif (token) {\n    if (token === API_TOKEN) {\n    } else {\n        msg.payload = {\n            \"success\": false,\n            \"error\": \"Invalid token provided\"\n        };\n    } \n} else {\n    msg.payload = {\n        success: false,\n        error: 'No token provided. Supply token as query param `token`'\n    };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 360,
        "wires": [
            [
                "4ee6912d.354a"
            ]
        ]
    },
    {
        "id": "4ee6912d.354a",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Success?",
        "property": "payload.success",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 460,
        "wires": [
            [
                "1ac1de09.edcc52"
            ],
            [
                "82983629.47b188"
            ]
        ]
    },
    {
        "id": "82983629.47b188",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Set 403 response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 500,
        "wires": [
            [
                "dac1f5f9.79ded8"
            ]
        ]
    },
    {
        "id": "dac1f5f9.79ded8",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "771fd0dd.5cc9c",
        "type": "function",
        "z": "a7c98f63.a00f9",
        "name": "",
        "func": "const token = msg.payload.token;\nconst API_TOKEN = 'D6W69PRgCoDKgHZGJmRUNA';\n\nif (token) {\n    if (token === API_TOKEN) {\n    } else {\n        msg.payload = {\n            \"success\": false,\n            \"error\": \"Invalid token provided\"\n        };\n    } \n} else {\n    msg.payload = {\n        success: false,\n        error: 'No token provided. Supply token as query param `token`'\n    };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 620,
        "wires": [
            [
                "f64537e2.dda748"
            ]
        ]
    },
    {
        "id": "f64537e2.dda748",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Success?",
        "property": "payload.success",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 720,
        "wires": [
            [
                "d0ca95f9.6e7c08"
            ],
            [
                "c68c27dc.c9e398"
            ]
        ]
    },
    {
        "id": "c68c27dc.c9e398",
        "type": "change",
        "z": "a7c98f63.a00f9",
        "name": "Set 403 response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "c44617e9.59f8e8"
            ]
        ]
    },
    {
        "id": "c44617e9.59f8e8",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 760,
        "wires": []
    },
    {
        "id": "7ffa8b93.098334",
        "type": "link out",
        "z": "a7c98f63.a00f9",
        "name": "",
        "links": [],
        "x": 995,
        "y": 200,
        "wires": []
    },
    {
        "id": "922bfd86.ce10c",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Success?",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1000,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9491933d.a66a9",
        "type": "debug",
        "z": "a7c98f63.a00f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 960,
        "wires": []
    },
    {
        "id": "7350a2c.c11e45c",
        "type": "http response",
        "z": "a7c98f63.a00f9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1470,
        "y": 840,
        "wires": []
    },
    {
        "id": "b8ca8c44.246dc",
        "type": "switch",
        "z": "a7c98f63.a00f9",
        "name": "Success?",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1000,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "31e4de3d.fd6842",
        "type": "slack-rtm-in",
        "z": "3dd13241.f528fe",
        "client": "3098618a.0c745e",
        "name": "",
        "events": "",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "57e1dce7.52c2d4"
            ]
        ]
    },
    {
        "id": "57e1dce7.52c2d4",
        "type": "function",
        "z": "3dd13241.f528fe",
        "name": "",
        "func": "global.set(\"channel\",msg.payload.channel);\n\nmsg.topic = \"message\";\nmsg.payload = msg.payload.text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 340,
        "wires": [
            [
                "b79ccda3.7c5c"
            ]
        ]
    },
    {
        "id": "b79ccda3.7c5c",
        "type": "watson-conversation-v1",
        "z": "3dd13241.f528fe",
        "name": "",
        "workspaceid": "5089314d-0838-4c72-a190-afa726f8eecd",
        "multiuser": false,
        "context": true,
        "empty-payload": false,
        "service-endpoint": "https://api.us-south.assistant.watson.cloud.ibm.com/instances/66fea991-f64d-4873-8164-72641dd9ffe0",
        "timeout": "",
        "optout-learning": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "b9b32cb9.88ee9"
            ]
        ]
    },
    {
        "id": "b9b32cb9.88ee9",
        "type": "function",
        "z": "3dd13241.f528fe",
        "name": "",
        "func": "var g_channel=global.get(\"channel\");\n\nmsg.topic = \"message\";\nmsg.payload = {\n    channel: g_channel,\n    text: msg.payload.output.text[0]\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 420,
        "wires": [
            [
                "feb9962b.095ee8"
            ]
        ]
    },
    {
        "id": "feb9962b.095ee8",
        "type": "slack-rtm-out",
        "z": "3dd13241.f528fe",
        "client": "3098618a.0c745e",
        "name": "",
        "x": 840,
        "y": 500,
        "wires": [
            [
                "a7d9e06.376492"
            ]
        ]
    },
    {
        "id": "a7d9e06.376492",
        "type": "debug",
        "z": "3dd13241.f528fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 500,
        "wires": []
    },
    {
        "id": "b5f3bff1.911ad",
        "type": "comment",
        "z": "3dd13241.f528fe",
        "name": "How to test your own node in a local environment",
        "info": "`npm install work/contrib-taiponrock/`",
        "x": 460,
        "y": 100,
        "wires": []
    },
    {
        "id": "d4936752.05c458",
        "type": "inject",
        "z": "3dd13241.f528fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AFG",
        "payloadType": "str",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "d161153a.b55538"
            ]
        ]
    },
    {
        "id": "22dbe7c.93f9018",
        "type": "debug",
        "z": "3dd13241.f528fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 180,
        "wires": []
    },
    {
        "id": "d161153a.b55538",
        "type": "taiponrock",
        "z": "3dd13241.f528fe",
        "name": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "22dbe7c.93f9018"
            ]
        ]
    },
    {
        "id": "2add0266.54997e",
        "type": "inject",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-01\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-02\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-03\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-04\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-05\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-06\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-07\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-08\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-09\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-10\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-11\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-12\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-13\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-14\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-15\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-16\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-17\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-18\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-19\",\"value\":null},{\"Floor 1st\":1745,\"Floor 2nd\":1745,\"time\":\"2021-04-20\",\"value\":1745},{\"Floor 1st\":3600,\"Floor 2nd\":3600,\"time\":\"2021-04-21\",\"value\":3600},{\"Floor 1st\":3599,\"Floor 2nd\":1886,\"time\":\"2021-04-22\",\"value\":3599},{\"Floor 1st\":3601,\"Floor 2nd\":null,\"time\":\"2021-04-23\",\"value\":3601},{\"Floor 1st\":3600,\"Floor 2nd\":null,\"time\":\"2021-04-24\",\"value\":3600},{\"Floor 1st\":3600,\"Floor 2nd\":null,\"time\":\"2021-04-25\",\"value\":3600},{\"Floor 1st\":2165,\"Floor 2nd\":null,\"time\":\"2021-04-26\",\"value\":2165},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-27\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-28\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-29\",\"value\":null},{\"Floor 1st\":null,\"Floor 2nd\":null,\"time\":\"2021-04-30\",\"value\":null}]",
        "payloadType": "json",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "40362c37.d29e74"
            ]
        ]
    },
    {
        "id": "52c585d2.b7817c",
        "type": "debug",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "40362c37.d29e74",
        "type": "function",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "func": "var a = 0;\nvar b = 0;\nvar labels = [];\nvar datasets = [];\nvar data = [];\nvar data1 = [];\nvar assets = [{\"name\":\"Floor 1st\",\"id\":\"61bb03d0-a194-11eb-b183-93740c0d79ca\"},{\"name\":\"Floor 2nd\",\"id\":\"9085ed60-a194-11eb-b183-93740c0d79ca\"}];\nvar backgroundColor = ['#ff6384', '#36a2eb', '#cc65fe'];\nvar count = 0;\n// for (let i in msg.payload) {\n//     a += msg.payload[i].value;\n//     labels.push(msg.payload[i].time);\n// }\nassets.forEach(elem => {\n    datasets.push({\n        label: elem.name,\n        data: [],\n    });\n})\n\nmsg.payload.map(elem => {\n    var other = elem.value * 3;\n    for (let e in elem) {\n        if (e !== 'time' && e !== 'value') {\n            other = other - elem[e];\n        }\n    }\n    elem.other = other;\n    return elem;\n})\n\nmsg.payload.forEach(elem => {\n    a += elem.value;\n    labels.push(elem.time);\n    datasets.forEach(e => {\n        e.data.push(elem[e.label]);\n        e.barPercentage = 0.5;\n    })\n    data.push(elem.other);\n});\n\ndatasets.push({\n    label: 'Other',\n    data: data,\n});\n\nfor (let i=0; i<datasets.length; i++) {\n    datasets[i].backgroundColor = backgroundColor[i];\n}\n\nmsg.abc = a;\nmsg.labels = labels;\nmsg.datasets = datasets;\nmsg.assets = assets;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 220,
        "wires": [
            [
                "aa7da246.d9e5d"
            ]
        ]
    },
    {
        "id": "ae4df853.d90618",
        "type": "debug",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "aa7da246.d9e5d",
        "type": "function",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "func": "msg.labels = [];\nvar a = [];\nvar dataLegendCharts = [];\nvar count = 0;\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\nmsg.datasets.forEach(elem => {\n    msg.labels.push(elem.label);\n    a.push(elem.data.reduce(reducer))\n    elem.data.forEach(e => {\n        if (e === null) return;\n        count += 1;\n    })\n    dataLegendCharts.push({\n        text: elem.label,\n        min: Math.min.apply(null, elem.data),\n        max: Math.max.apply(null, elem.data),\n        total: elem.data.reduce(reducer),\n        average: Math.floor(elem.data.reduce(reducer)/count*100, 2)/100\n    });\n})\n\na = a.map(elem => {\n    return Math.round(elem/a.reduce(reducer)*100, 2);\n});\n\nmsg.a = a;\nmsg.dataLegendCharts = dataLegendCharts;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 220,
        "wires": [
            [
                "52c585d2.b7817c"
            ]
        ]
    },
    {
        "id": "645a2393.49580c",
        "type": "inject",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-01\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-02\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-03\"},{\"normalConsumption\":13773,\"offPeakConsumption\":9866,\"peakConsumption\":5034,\"time\":\"2021-04\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-06\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-07\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-08\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-09\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-10\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-11\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-12\"}]",
        "payloadType": "json",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "1808b380.c5703d"
            ]
        ]
    },
    {
        "id": "1808b380.c5703d",
        "type": "function",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "func": "var method = 'byTime';\nvar prices = [\n    {\n        name: 'Peak',\n        price: 2817\n    },\n    {\n        name: 'Off-peak',\n        price: 989\n    },\n    {\n        name: 'Normal',\n        price: 1526\n    },\n];\nvar total = 0;\nvar temp = 0;\nvar price = {};\n\nprices.forEach(elem => {\n    price[elem.name] = elem.price\n})\n\nif (method === 'byTime') {\n    msg.payload.forEach(elem => {\n        temp = elem.normalConsumption*price['Normal'] +\n               elem.offPeakConsumption*price['Off-peak'] +\n               elem.peakConsumption*price['Peak'];\n        total += temp;\n    })\n}\nmsg.total = total;\nmsg.prices = price;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "ae4df853.d90618"
            ]
        ]
    },
    {
        "id": "b7d91eb0.88fce",
        "type": "inject",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"time\":\"04-01\",\"value\":null},{\"time\":\"04-02\",\"value\":null},{\"time\":\"04-03\",\"value\":null},{\"time\":\"04-04\",\"value\":null},{\"time\":\"04-05\",\"value\":null},{\"time\":\"04-06\",\"value\":null},{\"time\":\"04-07\",\"value\":null},{\"time\":\"04-08\",\"value\":null},{\"time\":\"04-09\",\"value\":null},{\"time\":\"04-10\",\"value\":null},{\"time\":\"04-11\",\"value\":null},{\"time\":\"04-12\",\"value\":null},{\"time\":\"04-13\",\"value\":null},{\"time\":\"04-14\",\"value\":null},{\"time\":\"04-15\",\"value\":null},{\"time\":\"04-16\",\"value\":null},{\"time\":\"04-17\",\"value\":null},{\"time\":\"04-18\",\"value\":null},{\"time\":\"04-19\",\"value\":null},{\"time\":\"04-20\",\"value\":1745},{\"time\":\"04-21\",\"value\":3600},{\"time\":\"04-22\",\"value\":3599},{\"time\":\"04-23\",\"value\":3601},{\"time\":\"04-24\",\"value\":3600},{\"time\":\"04-25\",\"value\":3600},{\"time\":\"04-26\",\"value\":3600},{\"time\":\"04-27\",\"value\":3600},{\"time\":\"04-28\",\"value\":2195},{\"time\":\"04-29\",\"value\":null},{\"time\":\"04-30\",\"value\":null}]",
        "payloadType": "json",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "848078d.2ae3888"
            ]
        ]
    },
    {
        "id": "2f0cda51.2b69e6",
        "type": "debug",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "848078d.2ae3888",
        "type": "function",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "func": "var data = msg.payload;\nvar rs = []\nrs = data.map(i => {\n    var x = {};\n    x.time = i.time;\n    x.level_1 = ((i.value>=0)&&(i.value-0)-(i.value>=50)&&(i.value-50));\n    x.level_2 = ((i.value>=50)&&(i.value-50)-(i.value>=100)&&(i.value-100));\n    x.level_3 = ((i.value>=100)&&(i.value-100)-(i.value>=200)&&(i.value-200));\n    x.level_4 = ((i.value>=200)&&(i.value-200)-(i.value>=300)&&(i.value-300));\n    x.level_5 = ((i.value>=300)&&(i.value-300)-(i.value>=400)&&(i.value-400));\n    x.level_6 = ((i.value>=400)&&(i.value-400));\n    return x;\n})\nmsg.payload = rs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "2f0cda51.2b69e6"
            ]
        ]
    },
    {
        "id": "8f6af639.afedb8",
        "type": "inject",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"normalConsumption\":1950,\"offPeakConsumption\":900,\"peakConsumption\":750,\"time\":\"2021-05-01\"},{\"normalConsumption\":1950,\"offPeakConsumption\":900,\"peakConsumption\":750,\"time\":\"2021-05-02\"},{\"normalConsumption\":1950,\"offPeakConsumption\":900,\"peakConsumption\":750,\"time\":\"2021-05-03\"},{\"normalConsumption\":1222,\"offPeakConsumption\":600,\"peakConsumption\":300,\"time\":\"2021-05-04\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-05\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-06\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-07\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-08\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-09\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-10\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-11\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-12\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-13\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-14\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-15\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-16\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-17\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-18\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-19\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-20\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-21\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-22\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-23\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-24\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-25\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-26\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-27\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-28\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-29\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-30\"},{\"normalConsumption\":null,\"offPeakConsumption\":null,\"peakConsumption\":null,\"time\":\"2021-05-31\"}]",
        "payloadType": "json",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "41740849.96da68"
            ]
        ]
    },
    {
        "id": "3410fa26.4e0bf6",
        "type": "debug",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 480,
        "wires": []
    },
    {
        "id": "41740849.96da68",
        "type": "function",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "func": "const prices = {\"Peak\":2817,\"Off-peak\":989,\"Normal\":1526};\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\nvar timestamp = new Date().toLocaleDateString();\nvar barChartDatasets = [];\nvar barChartLabels = [];\nvar pieChartLabels = [];\nvar pieChartDatasets = [];\nvar data = [];\nvar monthCost = 0;\nvar todayCost = 0;\nconst backgroundColor= [\n    '#ff6384', '#36a2eb', '#cc65fe',\n    '#ffce56', '#1f77b4', '#ff7f0e',\n    '#2ca02c', '#17becf', '#7f7f7f'];\n    \nfor (let p in prices) {\n    pieChartLabels.push(p);\n}\n\npieChartLabels.forEach(elem => {\n    barChartDatasets.push({\n        label: elem,\n        data: [],\n        barPercentage: 0.5\n    })\n})\n\nmsg.payload.forEach(elem => {\n    barChartLabels.push(elem.time);\n    barChartDatasets.forEach(e => {\n        if (e.label === 'Peak') {\n            e.data.push(elem.peakConsumption);\n        } else if (e.label === 'Off-peak') {\n            e.data.push(elem.offPeakConsumption);\n        } else if (e.label === 'Normal') {\n            e.data.push(elem.normalConsumption);\n        }\n    })\n})\n\nfor (let i=0; i<barChartDatasets.length; i++) {\n    barChartDatasets[i].backgroudColor = backgroundColor[i];\n}\n\nbarChartDatasets.forEach(elem => {\n    data.push(elem.data.reduce(reducer));\n})\n\n\n\nfor (let i in data) {\n    monthCost += data[i]*prices[pieChartLabels[i]];\n}\n\nmsg.payload.forEach(elem => {\n    if (Number(elem.time.slice(-2)) == timestamp[2]) {\n        todayCost = elem.normalConsumption*prices[\"Normal\"] +\n                    elem.offPeakConsumption*prices[\"Off-peak\"] +\n                    elem.peakConsumption*prices[\"Peak\"];\n    }\n})\n\ndata = data.map(elem => {\n    return Math.floor(elem/data.reduce(reducer)*10000)/100;\n})\n\npieChartDatasets.push({\n    backgroundColor: backgroundColor,\n    data: data\n})\n\nmsg.labels = pieChartLabels;\nmsg.barChartDatasets = barChartDatasets;\nmsg.barChartLabels = barChartLabels;\nmsg.pieChartLabels = pieChartLabels;\nmsg.pieChartDatasets = pieChartDatasets;\nmsg.todayCost = todayCost;\nmsg.monthCost = monthCost;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "3410fa26.4e0bf6"
            ]
        ]
    },
    {
        "id": "d90ffdd6.a6d67",
        "type": "inject",
        "z": "dbc1b5ab.abe0a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"time\":\"05-01\",\"level1\":50,\"level2\":50,\"level3\":100,\"level4\":100,\"level5\":100,\"level6\":3200},{\"time\":\"05-02\",\"level6\":3600},{\"time\":\"05-03\",\"level6\":3600},{\"time\":\"05-04\",\"level6\":2482},{\"time\":\"05-05\",\"level6\":null},{\"time\":\"05-06\",\"level6\":null},{\"time\":\"05-07\",\"level6\":null},{\"time\":\"05-08\",\"level6\":null},{\"time\":\"05-09\",\"value\":null},{\"time\":\"05-10\",\"value\":null},{\"time\":\"05-11\",\"value\":null},{\"time\":\"05-12\",\"value\":null},{\"time\":\"05-13\",\"value\":null},{\"time\":\"05-14\",\"value\":null},{\"time\":\"05-15\",\"value\":null},{\"time\":\"05-16\",\"value\":null},{\"time\":\"05-17\",\"value\":null},{\"time\":\"05-18\",\"value\":null},{\"time\":\"05-19\",\"value\":null},{\"time\":\"05-20\",\"value\":null},{\"time\":\"05-21\",\"value\":null},{\"time\":\"05-22\",\"value\":null},{\"time\":\"05-23\",\"value\":null},{\"time\":\"05-24\",\"value\":null},{\"time\":\"05-25\",\"value\":null},{\"time\":\"05-26\",\"value\":null},{\"time\":\"05-27\",\"value\":null},{\"time\":\"05-28\",\"value\":null},{\"time\":\"05-29\",\"value\":null},{\"time\":\"05-30\",\"value\":null},{\"time\":\"05-31\",\"value\":null}]",
        "payloadType": "json",
        "x": 500,
        "y": 580,
        "wires": [
            []
        ]
    }
]